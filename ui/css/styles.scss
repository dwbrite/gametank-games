@use '_fonts.scss' as fonts;

code {
  @include fonts.pixel('Monogram', calc(1 * var(--scale)));
  text-transform: uppercase;
}

body {
  --scale: 2;
}

.navigation {
  @media screen and (min-width: 1080px) {
    h1 {
      @include fonts.pixel('Daydream', calc(3 * var(--scale)));
      text-transform: uppercase;
    }

    .user-menu {
      text-align: right;
      margin-right: 0.25em;
      margin-left: auto;

      .welcome-text {
        margin-right: 0.125em;
      }

      button {
        margin: 0.5em 0 0.5em 0.5em;
      }
    }
  }

  @media screen and (max-width: 1080px) {
    h1 {
      @include fonts.pixel('Daydream', calc(2 * var(--scale)));
      text-transform: uppercase;
    }

    .user-menu {
      text-align: left;
      margin-left: 0.25em;

      .welcome-text {
        margin-left: 0.25em;
      }

      button {
        margin: 0.5em 0.5em 0.5em 0;
      }
    }
  }

  .user-menu {
    margin-top: -2px;
    display: flex;
    flex-direction: column;

    @include fonts.pixel("TrueItalic", calc(1 * var(--scale)));

    .username {
      @include fonts.pixel("Streetwize", calc(1 * var(--scale)));
    }

    .user-menu-buttons {
      margin-top: auto;
    }
  }
}

// rules! Use EMs for as many units as you can.
// Be careful when mixing EMs and pixels!
// EMs are naturally scaled to the font size, whereas pixels need to be multiplied by scale.
// Never do (em + px) * scale

button {
  @include fonts.pixel("TrueItalic", calc(1 * var(--scale)));
  color: #faebd7;
  background-color: #4f3e4e;
  border: 0;
  padding: 0;
  cursor: pointer;
  outline: none;
  transition: box-shadow 0.2s;
  position:relative;

  min-width: calc(1em + (1px * var(--scale)));
  height: calc(1em + (1px * var(--scale)));
  max-height: calc(1em + (1px * var(--scale)));

n
  & > code {
    display: inline-flex;
    transform: translateY(calc(-1px * var(--scale)));
    padding-left: calc(1px * var(--scale));
  }

  & > span {
    display: inline-flex;
    padding-left: calc(6px * var(--scale));
    padding-right: calc(5px * var(--scale));
    transform: translateY(calc(-1px * var(--scale)));
  }

  &:active {
    transform: translateY(1px); /* Simulates button press */
  }

  &:hover {
    background-color: #3f2e3e; /* Slightly lighter black for hover effect */
  }
}

.game-list {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(calc((464px) * var(--scale)), max-content));
  grid-gap: 16px;
  padding: initial;
  justify-content: center;

  .game-entry {
    list-style-type: none;
    width: calc((464px) * var(--scale));
    min-height: calc((128px) * var(--scale));
    display: flex;
    margin: 1em;

    padding: calc(8px * var(--scale));

    img.thumbnail {
      width: calc(128px * var(--scale));
      height: calc(128px * var(--scale));
      margin-right: calc(8px * var(--scale));
    }

    div {
      padding-left: calc(1px * var(--scale));
    }
  }
}



a {
  color: #faebd7;
  @include fonts.pixel("Streetwize", 2);
  text-decoration: none;

  :hover {
    cursor: pointer;
  }
}

body {
  color: #faebd7;
  overflow: hidden;
  text-transform: unset;
  background-image: url("/static/code_long_transparent.png");
  background-color: #2f1e2e;
  background-repeat: no-repeat;
  overflow-y: auto;
  width: 100vw;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  margin: 0;

  @include fonts.pixel("Streetwize", calc(1 * var(--scale)));

  .the-page {
    position: relative;
    width: 80vw;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 2em;
    transform: translateX(var(--pixel-align-offset));
  }

  .navigation {
    padding-top: 1em;
    padding-bottom: 0.5em;
    padding-left: 0.5em;
    padding-right: 0.5em;

    margin-left: 1em;
    margin-right: 1em;

    display: flex;
    flex-wrap: wrap;
  }

  .the-content {
    //background-color: #4f3e4e;
    padding: 0.5em 1.25em;
  }
}